---
import { getCollection } from "astro:content";
import { Picture } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";

// Filter blog entries with 'draft: false' & date before current date
const publishedBlogEntries = await getCollection("blog", ({ data }) => { return !data.draft && data.publishDate < new Date(); });

// Sort content entries by publication date
publishedBlogEntries.sort(function (a, b) { return b.data.publishDate.valueOf() - a.data.publishDate.valueOf(); });
---
<Layout title="Blog">
  <Container>
    <Sectionhead><Fragment slot="title">Our Blog <a 
      href="/rss.xml" 
      target="_blank" 
      class="text-white inline-flex bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-badge text-sm px-2.5 py-2.5 text-center me-2 mb-2" 
      aria-label="RSS Feed" 
      title="RSS Feed">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-rss-fill" viewBox="0 0 16 16">
          <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm1.5 2.5c5.523 0 10 4.477 10 10a1 1 0 1 1-2 0 8 8 0 0 0-8-8 1 1 0 0 1 0-2m0 4a6 6 0 0 1 6 6 1 1 0 1 1-2 0 4 4 0 0 0-4-4 1 1 0 0 1 0-2m.5 7a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
      </svg>
      </a></Fragment>
      <Fragment slot="desc">Our Posts as well as Tutorials we host for FOSS type software.</Fragment></Sectionhead>
    <main class="mt-16">
      <ul class="grid gap-16 max-w-4xl mx-auto">
        {publishedBlogEntries.map((blogPostEntry, index) => (
            <li><div class="divider" />
              <a href={`/blog/${blogPostEntry.slug}`}>
                <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
                  <Picture
                    src={blogPostEntry.data.image.src}
                    alt={blogPostEntry.data.image.alt}
                    sizes="(max-width: 800px) 100vw, 800px"
                    width={800} height={600}
                    loading={index <= 2 ? "eager" : "lazy"}
                    decoding={index <= 2 ? "sync" : "async"}
                    class="w-full rounded-md object-cover object-center bg-white"/>
                  <div>
                    <span class="bg-blue-100 text-blue-800 text-sm font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300 uppercase tracking-wider">{blogPostEntry.data.category}</span>
                    <h2 class="text-3xl font-semibold leading-snug tracking-tight mt-1 ">{blogPostEntry.data.title}</h2>
                    <div class="flex gap-2 mt-3">
                      <span class="text-slate-300">{blogPostEntry.data.author}</span>
                      <span class="text-slate-300">â€¢ </span>
                      <time class="text-slate-300" datetime={blogPostEntry.data.publishDate.toISOString()}>{blogPostEntry.data.publishDate.toDateString()}</time>
                    </div>
                    <p class="text-slate-400">{blogPostEntry.data.snippet}</p>
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </main>
  </Container>
</Layout>
